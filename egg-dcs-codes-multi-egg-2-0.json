{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-11-24T16:42:54-03:00",
    "name": "DCS Codes MultiEgg 2.0",
    "author": "ciroandresb@hotmail.com.ar",
    "description": "Simple DCS Codes Multi MC Egg for PaperMC, FoliaMC, PurpurMC, Waterfall, Fabric, Forge and MohistMC",
    "features": [
        "eula",
        "java_version",
        "pid_limit"
    ],
    "docker_images": {
        "Java 21": "ghcr.io\/parkervcp\/yolks:java_21",
        "Java 19": "ghcr.io\/parkervcp\/yolks:java_19",
        "Java 17": "ghcr.io\/parkervcp\/yolks:java_17",
        "Java 16": "ghcr.io\/parkervcp\/yolks:java_16",
        "Java 11": "ghcr.io\/parkervcp\/yolks:java_11",
        "Java 8": "ghcr.io\/parkervcp\/yolks:java_8"
    },
    "file_denylist": [],
    "startup": "java -Xms128M -Xmx$(({{SERVER_MEMORY}}*80\/100))M --add-modules=jdk.incubator.vector -jar {{SERVER_JARFILE}}",
    "config": {
        "files": "{\r\n    \"server.properties\": {\r\n        \"parser\": \"properties\",\r\n        \"find\": {\r\n            \"server-ip\": \"0.0.0.0\",\r\n            \"server-port\": \"{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \")! For help, type \"\r\n}",
        "logs": "{}",
        "stop": "stop"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\n# Funci\u00f3n para mostrar el banner\r\nfunction display {\r\n    echo -e \"\\033c\"  # Limpiar la pantalla\r\n    echo \"=========================================================================\"\r\n    echo \"                  DSC Codes Minecraft Server Installer                   \"\r\n    echo \"=========================================================================\"\r\n}\r\n\r\n# Funci\u00f3n para instalar dependencias\r\nfunction install_dependencies {\r\n    if ! command -v curl &> \/dev\/null; then  # Verificar si curl no est\u00e1 instalado\r\n        echo \"curl no est\u00e1 instalado. Instalando curl...\"\r\n        apt update && apt install -y curl || exit 0  # Instalar curl usando apt\r\n    else\r\n        echo \"curl ya est\u00e1 instalado.\"\r\n    fi\r\n\r\n    if ! command -v jq &> \/dev\/null; then  # Verificar si jq no est\u00e1 instalado\r\n        echo \"jq no est\u00e1 instalado. Instalando jq...\"\r\n        apt install -y jq || exit 0  # Instalar jq usando apt\r\n    else\r\n        echo \"jq ya est\u00e1 instalado.\"\r\n    fi\r\n}\r\n\r\n# Funci\u00f3n para forzar configuraciones en server.properties\r\nfunction forceStuffs {\r\n    if ! grep -q \"^motd=\" \/mnt\/server\/server.properties; then  # Verificar si no existe \"motd=\" en server.properties\r\n        echo \"motd=Powered by DCS Codes | Change this motd in server.properties\" >> \/mnt\/server\/server.properties  # A\u00f1adir motd\r\n        echo \"Aviso: El archivo server.properties ha sido modificado. Los cambios se aplicar\u00e1n.\"\r\n        sleep 3\r\n    else\r\n        echo \"motd ya est\u00e1 configurado. Omitiendo modificaci\u00f3n.\"\r\n        sleep 2\r\n    fi\r\n}\r\n\r\n# Funci\u00f3n para descargar el servidor\r\nfunction downloadServer {\r\n    platform_choice=\"${PLATFORM_CHOICE:-1}\"  # Elegir la plataforma (1: PaperMC, 2: PurpurMC, 3: FoliaMC)\r\n    version=\"${VERSION:-latest}\"  # Elegir la versi\u00f3n (por defecto es \"latest\")\r\n\r\n    case $platform_choice in\r\n        PaperMC)\r\n            fork_name=\"PaperMC\"\r\n            SERVER_FILE=\"\/mnt\/server\/server.jar\"  # Definir el archivo del servidor\r\n            DOWNLOAD_URL=\"https:\/\/mcutils.com\/api\/server-jars\/paper\/$version\/download\"  # Definir la URL de descarga\r\n            ;;\r\n        PurpurMC)\r\n            fork_name=\"PurpurMC\"\r\n            SERVER_FILE=\"\/mnt\/server\/server.jar\"  # Definir el archivo del servidor\r\n            DOWNLOAD_URL=\"https:\/\/mcutils.com\/api\/server-jars\/purpur\/$version\/download\"  # Definir la URL de descarga\r\n            ;;\r\n        FoliaMC)\r\n            fork_name=\"FoliaMC\"\r\n            SERVER_FILE=\"\/mnt\/server\/server.jar\"  # Definir el archivo del servidor\r\n            DOWNLOAD_URL=\"https:\/\/mcutils.com\/api\/server-jars\/folia\/$version\/download\"  # Definir la URL de descarga\r\n            ;;\r\n\t    Waterfall)\r\n            fork_name=\"Waterfall\"\r\n            SERVER_FILE=\"\/mnt\/server\/server.jar\"  # Definir el archivo del servidor\r\n            DOWNLOAD_URL=\"https:\/\/mcutils.com\/api\/server-jars\/waterfall\/$version\/download\"  # Definir la URL de descarga\r\n            ;;\r\n\t    Fabric)\r\n            fork_name=\"Fabric\"\r\n            SERVER_FILE=\"\/mnt\/server\/server.jar\"  # Definir el archivo del servidor\r\n            DOWNLOAD_URL=\"https:\/\/mcutils.com\/api\/server-jars\/fabric\/$version\/download\"  # Definir la URL de descarga\r\n            ;;\r\n\t    Forge)\r\n            fork_name=\"Forge\"\r\n            SERVER_FILE=\"\/mnt\/server\/server.jar\"  # Definir el archivo del servidor\r\n            DOWNLOAD_URL=\"https:\/\/mcutils.com\/api\/server-jars\/forge\/$version\/download\"  # Definir la URL de descarga\r\n            ;;\r\n\t\tMohistMC)\r\n            fork_name=\"MohistMC\"\r\n            SERVER_FILE=\"\/mnt\/server\/server.jar\"  # Definir el archivo del servidor\r\n            DOWNLOAD_URL=\"https:\/\/mohistmc.com\/api\/v2\/projects\/mohist\/$version\/builds\/latest\/download\"  # Definir la URL de descarga\r\n            ;;\r\n        *)\r\n            echo \"Opci\u00f3n inv\u00e1lida\"\r\n            sleep 3\r\n            exit 1\r\n            ;;\r\n    esac\r\n\r\n    display\r\n    echo \"Plataforma seleccionada: $fork_name\"\r\n    echo \"Versi\u00f3n: $version\"\r\n    sleep 3\r\n\r\n    if [ -f \"$SERVER_FILE\" ]; then\r\n        display\r\n        echo \"El archivo $SERVER_FILE ya existe. Renombr\u00e1ndolo a oldserver.jar...\"\r\n        mv \"$SERVER_FILE\" \"\/mnt\/server\/oldserver.jar\"  # Renombrar el archivo existente a oldserver.jar\r\n        sleep 3\r\n    fi\r\n\r\n    display\r\n    echo \"Descarga en progreso, por favor espera...\"\r\n    sleep 2\r\n    forceStuffs\r\n\r\n    # Descargar el archivo y guardarlo con el nombre correcto\r\n    curl -L \"$DOWNLOAD_URL\" -o \/mnt\/server\/download_temp.jar || exit 0\r\n\r\n    # Renombrar el archivo descargado a server.jar\r\n    mv \/mnt\/server\/download_temp.jar \"$SERVER_FILE\"\r\n\r\n    # Verificar el nombre del archivo descargado\r\n    if [ ! -f \"$SERVER_FILE\" ]; then\r\n        echo \"Error: El archivo descargado no coincide con el nombre esperado $SERVER_FILE.\"\r\n        ls -l \/mnt\/server\r\n        exit 1\r\n    fi\r\n\r\n    display\r\n    echo \"Descarga completa\"\r\n    sleep 3\r\n    echo -e \"\"\r\n}\r\n\r\ninstall_dependencies\r\n\r\nif [ ! -f \"\/mnt\/server\/eula.txt\" ]; then\r\n    display\r\n    createEula\r\n    downloadServer\r\nelse\r\n    display\r\n    echo \"eula.txt encontrado. Omitiendo descarga.\"\r\n    sleep 2\r\n    downloadServer\r\nfi\r\n\r\n# Salir con un c\u00f3digo de \u00e9xito\r\nexit 0",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Minecraft Version",
            "description": "The version of Minecraft to download. \r\n\r\nLeave at latest to always get the latest version. Invalid versions will default to latest.",
            "env_variable": "VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        },
        {
            "name": "Server Jar File",
            "description": "The name of the .jar file to run the server with.",
            "env_variable": "SERVER_JARFILE",
            "default_value": "server.jar",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|regex:\/^([\\w\\d._-]+)(\\.jar)$\/|max:80",
            "field_type": "text"
        },
        {
            "name": "Platform Choice",
            "description": "Install : PaperMC, PurpurMC, FoliaMC, Waterfall, Fabric, Forge, MohistMC",
            "env_variable": "PLATFORM_CHOICE",
            "default_value": "PurpurMC",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:999|in:PaperMC,PurpurMC,FoliaMC,Waterfall,Fabric,Forge,MohistMC",
            "field_type": "text"
        }
    ]
}